$schema: "http://json-schema.org/draft-06/schema"
$id: "https://errorcorrectionzoo.org/schemas/ecc"

#
# A <ECC> data structure is an object (key/value pairs) with the following
# properties.
#
type: object
additionalProperties: false
required: ['code_id', 'name', 'description']
properties:

  # every code must have a code_id.
  code_id:
    type: string
    pattern: '^[a-z0-9_.-]+$'
    _single_line_string: True
    _description: >-
      An internal identifier for the code.  It must be unique across all codes
      on the error correction zoo.

  # every code must have a name.
  name:
    type: string
    _minilatex: 'simple'
    _single_line_string: True
    _description: >-
      The name of the code.  It is listed in multiple places, so don't make it
      too long.

  # when the name is long, we can provide a short name to display in places
  # where space is precious (e.g. navigation links in the header bar)
  short_name:
    type: string
    _minilatex: 'simple'
    _single_line_string: true
    _description: >-
      (Optional.) A short name in case the 'name' field is long.  The short name
      is used in places where space is precious, such as in the navigation links
      in the header bar.  If no 'short_name' is provided, the 'name' field is
      used in those places instead.

  # every code must have a description.
  description:
    type: string
    _minilatex: 'full'
    _description: >-
      Describe code subspace as best as you can here.  Anything applicable to a
      larger parent set of codes (see below) should go in that entry instead of
      here.

  # \cite{...} reference where the code was introduced.
  introduced:
    type: string
    _single_line_string: True
    _minilatex: 'full'
    _description: >-
      First reference with the code (optional).  This field should be a single
      ‘\cite{}’ command with the appropriate reference(s).  Recall that you can
      cite multiple references with a single ‘\cite’ command, separating keys
      with commas.

  physical:
    $ref: '/schemas/ecc_space'

  logical:
    $ref: '/schemas/ecc_space'

  protection:
    _minilatex: 'full'
    type: string


  features:
    $ref: '/schemas/ecc_features'


  realizations:
    type: array
    items:
      _minilatex: 'full'
      type: string

  notes:
    type: array
    items:
      _minilatex: 'full'
      type: string

  #
  # Relations of the code to other codes:
  #
  relations:
    _use_schemadata: false
    type: object
    additionalProperties: false
    properties:
      # List of code_ids that are a "parent" of the present code
      parents:
        $ref: '/schemas/ecc_relation_list'
      cousins:
        $ref: '/schemas/ecc_relation_list'
